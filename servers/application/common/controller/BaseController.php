<?php
/**
 * Created by bianquan
 * User: ZhuYunlong
 * Email: 920200256@qq.com
 * Date: 2019/1/23
 * Time: 22:04
 */

namespace app\common\controller;


use app\adminApi\model\Api;
use app\adminApi\service\Token;
use app\lib\exception\AuthException;
use app\lib\Response;
use think\Cache;
use think\Controller;
use think\Request;

class BaseController extends Controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $request = Request::instance();
        //所有ajax请求的options预请求都会直接返回200，如果需要单独针对某个类中的方法，可以在路由规则中进行配置
        if($request->isOptions()){
            return json(['msg'=>'success'],200);
        }
//        Cache::clear();
        $module = $request->module();
        $controller = $request->controller();
        $action = $request->action();
        if(empty($module)) $module = 'index';
        if(empty($controller)) $controller = 'Index';
        if(empty($action)) $action = 'index';
        $api = [
            'api_path' => strtolower($module.'/'.$controller.'/'.$action)
        ];
        $allApi = $this->getApiByType('');
        if(in_array($api,$allApi)) {
            $this->checkAuth($api,$request);
        }
    }

    protected function checkAuth($api,$request) {
        $unRegisterApi = $this->getApiByType(0);
        $allowedNoAuth = $this->getApiByType(2);
        $allowedAuth = $this->getApiByType(3);
        $checkAllowedAuth = in_array($api, $allowedAuth);
//        throw new AuthException(['msg'=>[ $unRegisterApi]]);

        if(in_array($api, $allowedNoAuth) || $checkAllowedAuth) {
            $token = $request->header('X-Api-Token');
            $user = Token::checkToken($token);
            if($checkAllowedAuth) {
                $userID = $user->userID;
                $auth = Token::checkAuth($userID,$api);
                if(!$auth) {
                    throw new AuthException(['msg'=>'访问越权，请查看用户权限']);
                }
            }
        }
        if(in_array($api,$unRegisterApi)) {
            throw new AuthException(['msg'=>'权限错误：访问API未注册']);
        }
    }

    protected function getApiByType($type) {
        $api = Cache::get('api'.$type);
        if(!$api) {
            $api = Api::getByType($type);
//            $api = Cache::get('api'.$type);
        }
        return $api;
    }




}